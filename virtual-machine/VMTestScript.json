{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string"
    },
    "tstvnetname": {
      "type": "string"
    },
    "vmsubnetname": {
      "type": "string"
    },
    "strgsubnetname": {
      "type": "string"
    },
    "vmsubnetaddressspace": {
      "type": "string"
    },
    "sasubnetaddressspace": {
      "type": "string"
    },
    "strgaccname": {
      "type": "string"
    },
    "strgacckind": {
      "type": "string"
    },
    "strgaccsku": {
      "type": "string"
    },
    "strgaccskutier": {
      "type": "string"
    },
    "filesharename": {
      "type": "string"
    },
    "shareQuota": {
      "type": "string"
    },
    "pepname": {
      "type": "string"
    },
    "vm1-pip": {
      "type": "string"
    },
    "vm1-privip": {
      "type": "string"
    },
    "vm1-nsg": {
      "type": "string"
    },
    "vm1-nic": {
      "type": "string"
    },
    "vm1name": {
      "type": "string"
    },
    "vm1usrnm": {
      "type": "securestring"
    },
    "vm1pswrd": {
      "type": "securestring"
    },
    "vm1osdiskname": {
      "type": "string"
    }
  },
  "functions": [],
  "variables": {},
  "resources": [
    {
      "name": "[parameters('tstvnetname')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "[parameters('tstvnetname')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [ "10.0.0.0/16" ]
        },
        "subnets": [
          {
            "name": "[parameters('vmsubnetname')]",
            "properties": {
              "addressPrefix": "[parameters('vmsubnetaddressspace')]"
            }
          },
          {
            "name": "[parameters('strgsubnetname')]",
            "properties": {
              "addressPrefix": "[parameters('sasubnetaddressspace')]",
              "privateEndpointNetworkPolicies": "Disabled"
            }
          }
        ]
      }
    },

    {
      "name": "[parameters('strgaccname')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "location": "[parameters('location')]",
      "kind": "[parameters('strgacckind')]",
      "sku": {
        "name": "[parameters('strgaccsku')]",
        "tier": "[parameters('strgaccskutier')]"
      },
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }

      }

    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('strgaccname'), '/default/', parameters('filesharename'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('strgaccname'))]"
      ],
      "properties": {
        "accessTier": "Hot",
        "shareQuota": "[parameters('shareQuota')]"
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2019-04-01",
      "name": "[parameters('pepname')]",
      "location": "[parameters('location')]",
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "[parameters('pepname')]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('strgaccname'))]",
              "groupIds": [ "file" ],
              "privateLinkServiceConnectionState": {
                "status": "Approved",
                "description": "Auto-Approved",
                "actionsRequired": "None"
              }
            }

          }
        ],
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/Subnets', parameters('tstvnetname'),parameters('strgsubnetname'))]"
        }
      }
    },
    {
      "name": "[parameters('vm1-pip')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-11-01",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "[parameters('vm1-pip')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "name": "[parameters('vm1-nsg')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2018-08-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "nsgRule1",
            "properties": {
              "description": "description",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },

    {
      "name": "[parameters('vm1-nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-11-01",
      "location": "[parameters('location')]",

      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('vm1-pip'))]"
      ],

      "tags": {
        "displayName": "[parameters('vm1-nic')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('vm1-privip')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('vm1-pip'))]"
              },

              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('tstvnetname'), parameters('vmsubnetname'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('vm1name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('strgaccname'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('vm1-nic'))]"
      ],
      "tags": {
        "displayName": "[parameters('vm1name')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B2s"
        },
        "osProfile": {
          "computerName": "[parameters('vm1name')]",
          "adminUsername": "[parameters('vm1usrnm')]",
          "adminPassword": "[parameters('vm1pswrd')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          }
        },

        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2019-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[parameters('vm1osdiskname')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('vm1-nic'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('strgaccname'))).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.DevTestLab/schedules",
      "name": "[concat('shutdown-computevm-', parameters('vm1name'))]",
      "apiVersion": "2018-09-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vm1name'))]"
      ],
      "properties": {
        "status": "Enabled",
        "taskType": "ComputeVmShutdownTask",
        "dailyRecurrence": {
          "time": "1900"
        },
        "timeZoneId": "Greenwich Standard Time",
        "notificationSettings": {
          "status": "Disabled",
          "timeInMinutes": 15
        },
        "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines',parameters('vm1name'))]"
      }
    }
  ],
  "outputs": {}
}
