{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "hubvnetname": {
      "type": "string",
      "metadata": {
        "description": "Name of the Hub VNet."
      }
    },
    "spoke1vnetname": {
      "type": "string",
      "metadata": {
        "description": "Name of spoke 1 VNet"
      }
    },
    "spoke2vnetname": {
      "type": "string",
      "metadata": {
        "description": "Name of spoke 2 VNet"
      }
    },
    "spoke1vm1snet": {
      "type": "string"
    },
    "spoke1vm2snet": {
      "type": "string"
    },
    "spoke2vm3snet": {
      "type": "string"
    },
    "stoaccsnet": {
      "type": "string"
    },

    "rt1name": {
      "type": "string"
    },
    "spk2spkrtname": {
      "type": "string"
    },
    "nsgname": {
      "type": "string"
    },
    "location": {
      "type": "string"
    }
    /*
    "kvname": {
        "type": "string"
    }
*/
  },
  "functions": [],
  "variables": {},
  "resources": [
    {
      "name": "[parameters('hubvnetname')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-11-01",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "[parameters('hubvnetname')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["10.0.0.0/16"]
        },
        "subnets": [
          {
            "name": "AzureBastionSubnet",
            "properties": {
              "addressPrefix": "10.0.1.0/24"
            }
          },
          {
            "name": "AzureFirewallSubnet",
            "properties": {
              "addressPrefix": "10.0.2.0/24"
            }
          }
        ],
        "virtualNetworkPeerings": [
          {
            "name": "[concat(parameters('hubvnetname'), 'ToSpoke1')]",
            "properties": {
              "peeringState": "Connected",
              "remoteVirtualNetwork": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('spoke1vnetname'))]"
              },
              "allowVirtualNetworkAccess": true,
              "allowForwardedTraffic": true,
              "allowGatewayTransit": false,
              "useRemoteGateways": false,
              "remoteAddressSpace": {
                "addressPrefixes": ["10.1.0.0/16"]
              }
            }
          },
          {
            "name": "[concat(parameters('hubvnetname'), 'ToSpoke2')]",
            "properties": {
              "peeringState": "Connected",
              "remoteVirtualNetwork": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('spoke2vnetname'))]"
              },
              "allowVirtualNetworkAccess": true,
              "allowForwardedTraffic": true,
              "allowGatewayTransit": false,
              "useRemoteGateways": false,
              "remoteAddressSpace": {
                "addressPrefixes": ["10.2.0.0/16"]
              }
            }
          }
        ],
        "enableDdosProtection": false
      }
    },/*
    {
      "name": "[parameters('nsgname')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowTCPInbound",
            "properties": {
              "description": "Allow inbound TCP packets",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },*/
    {
      "name": "[parameters('spoke1vnetname')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-11-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]",
        "[resourceId('Microsoft.Network/routeTables', parameters('rt1name'))]"
      ],
      "tags": {
        "displayName": "[parameters('spoke1vnetname')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["10.1.0.0/16"]
        },
        "subnets": [
          {
            "name": "[parameters('spoke1vm1snet')]",
            "properties": {
              "addressPrefix": "10.1.1.0/24",
              /*"networkSecurityGroup": "[parameters('nsgname')]",*/
              "serviceEndpoints": [
                {
                  "service": "Microsoft.KeyVault",
                  "locations": ["*"]
                }
              ],
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', parameters('rt1name'))]"
              }
            }
          },
          {
            "name": "[parameters('spoke1vm2snet')]",
            "properties": {
              "addressPrefix": "10.1.2.0/24",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', parameters('rt1name'))]"
              }
            }
          }
        ],
        "virtualNetworkPeerings": [
          {
            "name": "[concat(parameters('spoke1vnetname'), 'toHub')]",
            "properties": {
              "peeringState": "Connected",
              "remoteVirtualNetwork": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]"
              },
              "allowVirtualNetworkAccess": true,
              "allowForwardedTraffic": true,
              "allowGatewayTransit": false,
              "useRemoteGateways": false,
              "remoteAddressSpace": {
                "addressPrefixes": ["10.0.0.0/16"]
              }
            }
          }
        ],
        "enableDdosProtection": false
      }
    },
    {
      "name": "[parameters('spoke2vnetname')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-11-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', parameters('rt1name'))]"
      ],
      "tags": {
        "displayName": "[parameters('spoke2vnetname')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["10.2.0.0/16"]
        },
        "subnets": [
          {
            "name": "[parameters('spoke2vm3snet')]",
            "properties": {
              "addressPrefix": "10.2.1.0/24",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', parameters('rt1name'))]"
              }
            }
          },
          {
            "name": "[parameters('stoaccsnet')]",
            "properties": {
              "addressPrefix": "10.2.2.0/24"
            }
          }
        ],
        "virtualNetworkPeerings": [
          {
            "name": "[concat(parameters('spoke2vnetname'), 'toHub')]",
            "properties": {
              "peeringState": "Connected",
              "remoteVirtualNetwork": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]"
              },
              "allowVirtualNetworkAccess": true,
              "allowForwardedTraffic": true,
              "allowGatewayTransit": false,
              "useRemoteGateways": false,
              "remoteAddressSpace": {
                "addressPrefixes": ["10.0.0.0/16"]
              }
            }
          }
        ],
        "enableDdosProtection": false
      }
    },

    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('hubvnetname'), '/', parameters('hubvnetname'), 'ToSpoke1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('spoke1vnetname'))]"
      ],
      "properties": {
        "peeringState": "Connected",
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('spoke1vnetname'))]"
        },
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": true,
        "allowGatewayTransit": true,
        "useRemoteGateways": false,
        "remoteAddressSpace": {
          "addressPrefixes": ["10.1.0.0/16"]
        }
      }
    },

    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('hubvnetname'), '/', parameters('hubvnetname'), 'ToSpoke2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('spoke2vnetname'))]"
      ],
      "properties": {
        "peeringState": "Connected",
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('spoke2vnetname'))]"
        },
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": true,
        "allowGatewayTransit": true,
        "useRemoteGateways": false,
        "remoteAddressSpace": {
          "addressPrefixes": ["10.2.0.0/16"]
        }
      }
    },

    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('spoke1vnetname'), '/', parameters('spoke1vnetname'), 'ToHub')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('spoke1vnetname'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]"
      ],
      "properties": {
        "peeringState": "Connected",
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]"
        },
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": true,
        "allowGatewayTransit": true,
        "useRemoteGateways": false,
        "remoteAddressSpace": {
          "addressPrefixes": ["10.0.0.0/16"]
        }
      }
    },

    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('spoke2vnetname'), '/', parameters('spoke2vnetname'), 'ToHub')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('spoke2vnetname'))]"
      ],
      "properties": {
        "peeringState": "Connected",
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]"
        },
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": true,
        "allowGatewayTransit": true,
        "useRemoteGateways": false,
        "remoteAddressSpace": {
          "addressPrefixes": ["10.0.0.0/16"]
        }
      }
    },
    {
      "name": "[parameters('rt1name')]",
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2019-11-01",
      "location": "[parameters('location')]",
      "tags": {},
      "properties": {
        "routes": [
          {
            "name": "[parameters('spk2spkrtname')]",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "10.0.2.4"
            }
          }
        ],
        "disableBgpRoutePropagation": true
      }
    },
    {
      "type": "Microsoft.Network/routeTables/routes",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('rt1name'), '/', parameters('spk2spkrtname'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', parameters('rt1name'))]"
      ],
      "properties": {
        "addressPrefix": "0.0.0.0/24",
        "nextHopType": "VirtualAppliance",
        "nextHopIpAddress": "10.0.2.4",
        "hasBgpOverride": false
      }
    }

    /*
  {
    "name": "keyVault1",
    "type": "Microsoft.KeyVault/vaults",
    "apiVersion": "2016-10-01",
    "location": "[parameters('location')]",
    "tags": {
      "displayName": "keyVault1"
    },
    "properties": {
      "enabledForDeployment": true,
      "enabledForTemplateDeployment": true,
      "enabledForDiskEncryption": true,
      "tenantId": "tenantId",
      "accessPolicies": [
        {
          "tenantId": "tenantId",
          "objectId": "objectId",
          "permissions": {
            "keys": [
              "Get"
            ],
            "secrets": [
              "List",
              "Get",
              "Set"
            ]
          }
        }
      ],
      "sku": {
        "name": "standard",
        "family": "A"
      }
    }
  }
*/
  ],
  "outputs": {}
}
